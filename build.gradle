group = 'com.hltech'

buildscript {
    ext {
        repos = {
            gradlePluginPortal()
            mavenLocal()
            mavenCentral()
        }
        groovyAllVersion = '2.4.13'
        lombokVersion = '1.18.2'
        spockVersion = '1.1-groovy-2.4'
        spockReportsVersion = '1.4.0'
        coverallsVersion = '2.8.2'
        disruptorVersion = '3.4.0'
        reflectionsVersion = '0.9.11'
        feignVersion = '2.0.1.RELEASE'
        jacksonVersion = '2.9.6'
        podamVersion = '7.2.0.RELEASE'
        cglibNodepVersion = '3.2.5'
        axionReleasePluginVersion = '1.10.0'
        nexusStagingPluginVersion = '0.20.0'
        nexusPublishPluginVersion = '0.2.0'
        sonarqubePluginVersion = '2.7'
        jaxRsVersion = '2.1.1'
    }
    repositories (repos)
    dependencies {
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:$coverallsVersion"
        classpath "pl.allegro.tech.build:axion-release-plugin:$axionReleasePluginVersion"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:$nexusStagingPluginVersion"
        classpath "de.marcphilipp.gradle:nexus-publish-plugin:$nexusPublishPluginVersion"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$sonarqubePluginVersion"
    }
}

repositories(repos)

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'groovy'
apply plugin: 'signing'
apply plugin: 'pl.allegro.tech.build.axion-release'
apply plugin: 'org.sonarqube'
apply plugin: 'de.marcphilipp.nexus-publish'
apply plugin: 'io.codearte.nexus-staging'
apply from: 'gradle/test.gradle'
apply from: 'gradle/codequality.gradle'

scmVersion {
    tag {
        prefix = 'pact-gen-release'
    }
}

project.version = scmVersion.version

jar.archiveBaseName = 'pact-gen'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "com.lmax:disruptor:$disruptorVersion"
    compile "org.reflections:reflections:$reflectionsVersion"
    compile "org.springframework.cloud:spring-cloud-starter-openfeign:$feignVersion"
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "uk.co.jemos.podam:podam:$podamVersion"
    compile "javax.ws.rs:javax.ws.rs-api:$jaxRsVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testCompile "org.codehaus.groovy:groovy-all:$groovyAllVersion"
    testCompile "org.spockframework:spock-core:$spockVersion"
    testCompile("com.athaydes:spock-reports:$spockReportsVersion") {
        transitive = false //this avoids affecting your version of Groovy/Spock in Spock reports
    }
    testCompile "cglib:cglib-nodep:$cglibNodepVersion"
}

javadoc {
    failOnError false
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            artifact sourcesJar
            artifact javadocJar
            pom {
                version = project.version
                artifactId  = project.name
                name = project.name
                groupId = project.group
                packaging = 'jar'

                description = 'Automated generation of pact files'
                url = 'https://github.com/HLTech/pact-gen'
                inceptionYear = '2018'

                scm {
                    connection = 'scm:git:https://github.com/HLTech/pact-gen.git'
                    developerConnection = 'scm:git:git@github.com:HLTech/pact-gen.git'
                    url = 'https://github.com/HLTech/pact-gen.git'
                }

                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'Felipe444'
                        name = 'Filip ≈Åazarski'
                        email = 'filip.lazarski@hltech.com'
                    }
                    developer {
                        id = 'garlicsauce'
                        name = 'Adrian Michalik'
                        email = 'adrian.michali@hltech.com'
                    }
                }
            }
        }
    }
}

if (project.hasProperty("signing.keyId")) {
    signing {
        sign publishing.publications.mavenJava
    }
}

nexusStaging {
    packageGroup project.group
    username System.getenv('SONATYPE_USER')
    password System.getenv('SONATYPE_PASSWORD')
    stagingProfileId = '8932a92dff8c84'
    numberOfRetries = 5
    delayBetweenRetriesInMillis = 60000
}
